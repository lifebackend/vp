// Code generated by go-swagger; DO NOT EDIT.

package general

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lifebackend/vp/pkg/client/vp"
)

// GetAppUpdateReader is a Reader for the GetAppUpdate structure.
type GetAppUpdateReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetAppUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppUpdateOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAppUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /app/update returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetAppUpdateOK creates a GetAppUpdateOK with default headers values
func NewGetAppUpdateOK(writer io.Writer) *GetAppUpdateOK {
	return &GetAppUpdateOK{
		Payload: writer,
	}
}

/*GetAppUpdateOK handles this case with default header values.

Successful Response
*/
type GetAppUpdateOK struct {
	Payload io.Writer
}

func (o *GetAppUpdateOK) Error() string {
	return fmt.Sprintf("[GET /app/update][%d] getAppUpdateOK  %+v", 200, o.Payload)
}

func (o *GetAppUpdateOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetAppUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppUpdateInternalServerError creates a GetAppUpdateInternalServerError with default headers values
func NewGetAppUpdateInternalServerError() *GetAppUpdateInternalServerError {
	return &GetAppUpdateInternalServerError{}
}

/*GetAppUpdateInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAppUpdateInternalServerError struct {
	Payload *vp.ErrorMessage
}

func (o *GetAppUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /app/update][%d] getAppUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppUpdateInternalServerError) GetPayload() *vp.ErrorMessage {
	return o.Payload
}

func (o *GetAppUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vp.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
