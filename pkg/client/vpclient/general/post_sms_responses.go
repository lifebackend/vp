// Code generated by go-swagger; DO NOT EDIT.

package general

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lifebackend/vp/pkg/client/vp"
)

// PostSmsReader is a Reader for the PostSms structure.
type PostSmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostSmsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /sms returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPostSmsOK creates a PostSmsOK with default headers values
func NewPostSmsOK() *PostSmsOK {
	return &PostSmsOK{}
}

/*PostSmsOK handles this case with default header values.

Successful Response
*/
type PostSmsOK struct {
	Payload vp.GetAppMessagesResponse
}

func (o *PostSmsOK) Error() string {
	return fmt.Sprintf("[POST /sms][%d] postSmsOK  %+v", 200, o.Payload)
}

func (o *PostSmsOK) GetPayload() vp.GetAppMessagesResponse {
	return o.Payload
}

func (o *PostSmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSmsInternalServerError creates a PostSmsInternalServerError with default headers values
func NewPostSmsInternalServerError() *PostSmsInternalServerError {
	return &PostSmsInternalServerError{}
}

/*PostSmsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostSmsInternalServerError struct {
	Payload *vp.ErrorMessage
}

func (o *PostSmsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sms][%d] postSmsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSmsInternalServerError) GetPayload() *vp.ErrorMessage {
	return o.Payload
}

func (o *PostSmsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vp.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
