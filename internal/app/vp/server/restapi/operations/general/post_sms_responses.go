// Code generated by go-swagger; DO NOT EDIT.

package general

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/lifebackend/vp/internal/vperror"
	"github.com/sirupsen/logrus"

	"github.com/lifebackend/vp/internal/app/vp/server/models"
)

// PostSmsOKCode is the HTTP code returned for type PostSmsOK
const PostSmsOKCode int = 200

/*PostSmsOK Successful Response

swagger:response postSmsOK
*/
type PostSmsOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostMessageResponse `json:"body,omitempty"`
}

// NewPostSmsOKFunc is a type the create the response func
type NewPostSmsOKFunc func() *PostSmsOK

// NewPostSmsOK creates PostSmsOK with default headers values
func NewPostSmsOK() *PostSmsOK {

	return &PostSmsOK{}
}

// WithPayload adds the payload to the post sms o k response
func (o *PostSmsOK) WithPayload(payload *models.PostMessageResponse) *PostSmsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post sms o k response
func (o *PostSmsOK) SetPayload(payload *models.PostMessageResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSmsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			logrus.Panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostSmsInternalServerErrorCode is the HTTP code returned for type PostSmsInternalServerError
const PostSmsInternalServerErrorCode int = 500

/*PostSmsInternalServerError Internal Server Error

swagger:response postSmsInternalServerError
*/
type PostSmsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostSmsInternalServerErrorFunc is a type the create the response func
type NewPostSmsInternalServerErrorFunc func() *PostSmsInternalServerError

// NewPostSmsInternalServerError creates PostSmsInternalServerError with default headers values
func NewPostSmsInternalServerError() *PostSmsInternalServerError {

	return &PostSmsInternalServerError{}
}

// WithPayload adds the payload to the post sms internal server error response
func (o *PostSmsInternalServerError) WithPayload(payload *models.ErrorMessage) *PostSmsInternalServerError {
	o.Payload = payload
	return o
}

// WithErr adds the Error payload with a default code to the post sms internal server error response
func (o *PostSmsInternalServerError) FromErr(err error) *PostSmsInternalServerError {
	type swaggerErr interface {
		Plain() (code string, message string, attributes map[string]string)
	}

	if swaggerErr, ok := err.(swaggerErr); ok {
		code, message, attributes := swaggerErr.Plain()

		o.Payload = &models.ErrorMessage{
			Code:       code,
			Message:    message,
			Attributes: attributes,
		}
		return o
	}

	o.Payload = &models.ErrorMessage{
		Code:       "InternalServiceError",
		Message:    err.Error(),
		Attributes: nil,
	}

	return o
}

// WithError adds the Error payload to the post sms internal server error response
func (o *PostSmsInternalServerError) FromMessage(gaemblaErr *vperror.AppMessage) *PostSmsInternalServerError {
	o.Payload = &models.ErrorMessage{
		Attributes: gaemblaErr.Attributes,
		Code:       gaemblaErr.Code,
		Message:    gaemblaErr.Message,
	}
	return o
}

// SetPayload sets the payload to the post sms internal server error response
func (o *PostSmsInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSmsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			logrus.Panic(err) // let the recovery middleware deal with this
		}
	}
}
